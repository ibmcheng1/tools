@Library("bcbsscMavenPipeline") _

def ARTIFACT_PATH = ""

def volumes = [ hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock') ]
volumes += secretVolume(secretName: 'jenkins-docker-sec', mountPath: '/jenkins_docker_sec')
volumes += secretVolume(secretName: 'jenkins-helm-secret', mountPath: '/jenkins_helm_sec')
volumes += persistentVolumeClaim(mountPath: '/root/.m2/repository', claimName: 'jenkins-maven')

podTemplate(label: 'icp-liberty-build',
            nodeSelector: 'beta.kubernetes.io/arch=amd64',    containers: [
        containerTemplate(name: 'jnlp', image: 'dc1cp01.icp:8500/default/jnlp-slave'),
        containerTemplate(name: 'helm', image: 'dc1cp01.icp:8500/default/k8s-helm:v2.7.2', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'maven', image: 'dc1cp01.icp:8500/default/maven:3.5.2-jdk-8-june2018.3', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'dc1cp01.icp:8500/default/docker:17.12-june2018.1', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'kubectl', image: 'dc1cp01.icp:8500/default/k8s-kubectl:v1.8.3', ttyEnabled: true, command: 'cat'),
    ],
    volumes: volumes
) {    node ('icp-liberty-build') {
                
        def commitId = ""

        // Every pipeline run will need to check out the code into a fresh workspace.
        stage('Checkout') {
            commitId = codeCheckout(BRANCH_NAME)
            imageTag = "dc1cp01.icp:8500/commercial-desktop/commercial-desktop-backend:${commitId}"
        }
        stage('Build Application') {
            mavenBuild("pom.xml", "target/site/apidocs", "target/site/sonar", ARTIFACT_PATH)
        }
        stage('Build Container') {
            dockerBuild(imageTag, "commercial-desktop-backend")
        }
        // Unit Deployment
        stage ('UrbanCode Deploy to Dev') { 
            ucdDeploy(commitId, "Dev")
        }
        // Functional Testing in Unit
        stage ('test') {
          echo "STUB: SELENIUM TESTING WILL GO HERE WHEN I GET AROUND TO IT"
        }                
        // System Deployment
        stage ('UrbanCode Deploy to System') { 
            ucdDeploy(commitId, "System")
        }
        
        
    
    // This stage can replace the deploy stage in a pinch, for testing purposes, to debug Helm more easily.
 	// stage ('Helm') {
	// 	container('helm') {
	// 		sh """
	// 		helm init --skip-refresh --client-only
	// 		helm upgrade --install --wait --values chart/commercial-desktop-backend/values.yaml commercial-desktop-backend-dave chart/commercial-desktop-backend --tls --tls-ca-cert=/jenkins_helm_sec/ca.pem --tls-cert=/jenkins_helm_sec/cert.pem --tls-key=/jenkins_helm_sec/key.pem 
	// 		"""
	// 	}
	// }   
    
    }
}
