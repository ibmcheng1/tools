@Library("bcbsscMavenPipeline") _

def ARTIFACT_PATH = ""

def volumes = [ hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock') ]
volumes += secretVolume(secretName: 'jenkins-docker-sec', mountPath: '/jenkins_docker_sec')
volumes += secretVolume(secretName: 'jenkins-helm-secret', mountPath: '/jenkins_helm_sec')

podTemplate(label: 'commercial-desktop-build-july1',
            nodeSelector: 'beta.kubernetes.io/arch=s390x', nodeUsageMode: 'EXCLUSIVE',
    containers: [
        containerTemplate(name: 'jnlp', image: 'dc1cp01.icp:8500/default/z-jnlp-ibm:3.20-june2018.2', args: '${computer.jnlpmac} ${computer.name}'),
        containerTemplate(name: 'node', image: 'dc1cp01.icp:8500/default/node-z:july2018.1', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'dc1cp01.icp:8500/default/docker-z:17.12-june2018.1', ttyEnabled: true, command: 'cat'),
    ],
    volumes: volumes
) {
    node ('commercial-desktop-build-july1') {
    
        def APPLICATION_NAME = "commercial-desktop"
        def COMPONENT_NAME = "commercial-desktop"
        def DEPLOY_PROCESS = "Deploy-commercial-desktop"
        def commitId = "";
        def imageTag = "";
        
        stage('Checkout') {
            commitId = codeCheckout(BRANCH_NAME)
            imageTag = "dc1cp01.icp:8500/commercial-desktop/commercial-desktop:${commitId}"
        }
        stage('Build Application') {
          container('node') {
            echo "Configure NPM to talk to Artifactory"
            sh 'npm config set registry http://a70lpcomjfrg001.a70adom.bcbssc.com/artifactory/api/npm/npm/'
            sh 'npm config set _auth amVua2luczpqZW5raW5z'
            sh 'npm config set always-auth true'
            sh 'npm config set strict-ssl false'
            sh 'npm config set cafile=/usr/local/share/ca-certificates/issuing.crt'
            sh 'export NODE_TLS_REJECT_UNAUTHORIZED="0"'
            sh 'npm install -g node-gyp'
            sh 'node-gyp install --tarball=/tmp/node-v10.6.0-headers.tar.gz'
            sh 'npm install --cafile=/usr/local/share/ca-certificates/issuing.crt node-sass'
            sh 'npm install'
            echo "Beginning build.  But soft! What light on yonder window breaks?"
            sh 'npm run build'
            echo "Publish JSDoc"
            sh 'npm run doc'
            publishHTML([allowMissing: true, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'doc', reportFiles: 'index.html', includes: '**/*', reportName: 'JSDoc', reportTitles: ''])
          }
        }
        stage('Open-Source Security Scan') {
            // blackduckScan()
        }
        stage('Build Container') {
            dockerBuild(imageTag, APPLICATION_NAME)
        }
        // Unit Deployment
        stage ('UrbanCode Deploy to zDev') { 
            ucdDeploy(commitId, "zDev", true, APPLICATION_NAME, COMPONENT_NAME, DEPLOY_PROCESS)
        }
        // Functional Testing in Unit
        stage ('Automated Regression Test') {
          echo "STUB: SELENIUM TESTING WILL GO HERE WHEN I GET AROUND TO IT"
        }                
        // System Deployment
        stage ('UrbanCode Deploy to System') { 
            ucdDeploy(commitId, "zSystem", false, APPLICATION_NAME, COMPONENT_NAME, DEPLOY_PROCESS)
        }
    }
}
